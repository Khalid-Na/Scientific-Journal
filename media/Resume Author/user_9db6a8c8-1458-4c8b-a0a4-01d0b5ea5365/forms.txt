from django import forms
from django.contrib.auth.forms import UserCreationForm
from django_countries.fields import CountryField
from django.contrib.auth import authenticate
from django.db import transaction
from django.forms.utils import ValidationError
from .models import Account, author

class AuthorSignupForm (forms.Form):
    # email = forms.EmailField(max_length=255, required=True, help_text='Required. Add a valid email address')
    # first_name = forms.CharField(max_length=55,required=True ,  help_text='Required. Enter your first name' )
    # last_name =forms.CharField(max_length=55,required=True  ,  help_text='Required. Enter your last name')
    # username = forms.CharField(max_length=55,required=True )
    # country = CountryField()  
    profession = forms.CharField( max_length=255, required=True)
    institution = forms.CharField(max_length=255, required=True )
    domain_of_interest = forms.CharField(max_length=255, required=True )
    laboratory_affiliation = forms.CharField(max_length=255, required=True )
    biography = forms.TextInput (attrs={'size': 700, 'title': 'Short bio'})
    resume = forms.FileField( required=True)
    
    

    # class Meta(forms.Form):
    #     model = author
    #     fields = (
    #               'profession',
    #               'institution' ,
    #               'domain_of_interest',
    #               'laboratory_affiliation',
    #               'biography' ,
    #               'resume' ,
    #               'password1',
    #               'password2',
    #               )

    # @transaction.atomic
    # def save(self, *args, **kwargs):
    #     instance = super().save(commit=False , *args, **kwargs)
    #     instance.is_author = True
    #     instance.save()
    #     self.save_m2m()
    #     auth = author.objects.create(user=instance)
    #     auth = author.objects.update(profession = self.cleaned_data['profession']
                                     
    #                                  ) 
    #     return instance
